services:
  train:
    build:
      context: .
      dockerfile: Dockerfile.train
    image: chessrl-train
    volumes:
      - ./models:/app/models
      - uv-cache:/root/.cache/uv
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    command: ["--iterations", "50", "--self-play-games", "100", "--parallel", "--mcts-simulations", "32"]
    gpus:
      - driver: nvidia
        count: 1
        capabilities: [gpu]


  play:
    build:
      context: .
      dockerfile: Dockerfile.gui
    image: chessrl-gui
    volumes:
      - ./models:/app/models
      - /tmp/.X11-unix:/tmp/.X11-unix
      - uv-cache:/root/.cache/uv
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=${XAUTHORITY}
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    network_mode: "host"  # Required for X11 forwarding
    depends_on:
      - train
    command: ["--model", "chess_model_final.pt"]

  dev:
    build:
      context: .
      dockerfile: Dockerfile.train
    image: chessrl-dev
    volumes:
      - .:/app
      - ./models:/app/models
      - uv-cache:/root/.cache/uv
      - /tmp/.X11-unix:/tmp/.X11-unix
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=${XAUTHORITY}
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    network_mode: "host"
    entrypoint: ["/bin/bash"]
    stdin_open: true
    tty: true
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - ChessRLVenv/
            - models/
        - action: rebuild
          path: ./pyproject.toml

volumes:
  uv-cache: